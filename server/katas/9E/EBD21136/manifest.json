{"id":"9EEBD21136","created":[2017,3,1,11,31,20],"image_name":"cyberdojofoundation/gcc_cpputest","display_name":"C (gcc), CppUTest","filename_extension":".c","progress_regexs":["Errors (.* ms)","OK (.* ms)"],"highlight_filenames":["untitled.c","untitled.h","untitledTest.cpp"],"lowlight_filenames":["AllTests.cpp","cyber-dojo.sh","makefile"],"red_amber_green":["lambda { |output|","  return :red   if /Errors \\((\\d+) failures, (\\d+) tests/.match(output)","  return :green if /OK \\((\\d+) tests, (\\d+) ran/.match(output)","  return :amber","}"],"language":"C (gcc)-CppUTest","tab_size":4,"visible_files":{"untitledTest.cpp":"#include \"CppUTest/TestHarness.h\"\r\n\r\nextern \"C\"\r\n{\r\n#include \"untitled.h\"\r\n}\r\n\r\nTEST_GROUP(TheGroupName)\r\n{\r\n    void setup()\r\n    {\r\n    }\r\n\r\n    void teardown()\r\n    {\r\n    }\r\n};\r\n\r\nTEST(TheGroupName, a_meaningful_test_name)\r\n{\r\n    // a simple example to start you off\r\n    LONGS_EQUAL(42, the_answer_is());\r\n    //CHECK(1);\r\n    //CHECK_TRUE(1);\r\n    //CHECK_FALSE(0);\r\n    //STRCMP_EQUAL(\"hey\", \"hey\");\r\n    //FAIL(\"Start here\");\r\n}\r\n","AllTests.cpp":"#include \"CppUTest/CommandLineTestRunner.h\"\n\nint main(int ac, char** av)\n{\n    return RUN_ALL_TESTS(ac, av);\n}\n\n","cyber-dojo.sh":"export CPPUTEST_HOME=/cpputest\nmake\n","untitled.c":"#include \"untitled.h\"\n\nint the_answer_is(void)\n{\n    return 6 * 9;\n}\n","untitled.h":"#ifndef UNTITLED_INCLUDED\r\n#define UNTITLED_INCLUDED\r\n\r\nint the_answer_is(void);\r\n\r\n#endif\r\n\r\n","makefile":"#Set this to @ to keep the makefile quiet\r\nSILENCE = @\r\n\r\n#---- Outputs ----#\r\nCOMPONENT_NAME = untitled\r\n\r\n#--- Inputs ----#\r\nPROJECT_HOME_DIR = .\r\n\r\nSRC_FILES = untitled.c\r\n\r\nTEST_SRC_FILES = untitledTest.cpp AllTests.cpp\r\n\r\nINCLUDE_DIRS =\\\r\n\t.\\\r\n\t$(CPPUTEST_HOME)/include/ \\\r\n\t$(CPPUTEST_HOME)/include/Platforms/Gcc\\\r\n\r\nCPPUTEST_WARNINGFLAGS += -Wall\r\nCPPUTEST_WARNINGFLAGS += -Werror\r\nCPPUTEST_WARNINGFLAGS += -Wswitch-default\r\nCPPUTEST_WARNINGFLAGS += -Wfatal-errors\r\nCPPUTEST_CXXFLAGS +=  -std=c++0x\r\nCPPUTEST_CFLAGS += -std=c99\r\n\r\ninclude $(CPPUTEST_HOME)/build/MakefileWorker.mk\r\n","output":"","instructions":"Write a program that prints the numbers from 1 to 100.\nBut for multiples of three print \"Fizz\" instead of the\nnumber and for the multiples of five print \"Buzz\". For\nnumbers which are multiples of both three and five\nprint \"FizzBuzz\".\n\nSample output:\n\n1\n2\nFizz\n4\nBuzz\nFizz\n7\n8\nFizz\nBuzz\n11\nFizz\n13\n14\nFizzBuzz\n16\n17\nFizz\n19\nBuzz\n... etc up to 100\n"},"exercise":"Fizz_Buzz"}