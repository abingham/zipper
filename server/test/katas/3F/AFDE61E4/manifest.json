{"id":"3FAFDE61E4","created":[2017,4,6,15,7,49],"image_name":"cyberdojofoundation/gcc_assert","display_name":"C (gcc), assert","filename_extension":".c","progress_regexs":[],"highlight_filenames":[],"lowlight_filenames":["cyber-dojo.sh","makefile","Makefile","unity.license.txt"],"language":"C (gcc)-assert","tab_size":4,"visible_files":{"hiker.tests.c":"#include \"hiker.h\"\n#include <assert.h>\n#include <stdio.h>\n\nstatic void life_the_universe_and_everything(void)\n{\n    assert(answer() == 42);\n}\n\nint main(void)\n{\n    life_the_universe_and_everything();\n    // green-traffic light pattern...\n    puts(\"All tests passed\");\n}\n","hiker.c":"#include \"hiker.h\"\r\n\r\nint answer(void)\r\n{\r\n    return 6 * 9;\r\n}\r\n","hiker.h":"#ifndef HIKER_INCLUDED\n#define HIKER_INCLUDED\n\nint answer(void);\n\n#endif\n","makefile":"CFLAGS += -I. -Wall -Wextra -Werror -std=c11\nCFLAGS +=\t-Wsequence-point\nCFLAGS +=\t-Wstrict-prototypes\nCFLAGS +=\t-Wmissing-prototypes\nCFLAGS +=\t-Wshadow -Wfloat-equal -O\n\nH_FILES = $(wildcard *.h)\nCOMPILED_H_FILES = $(patsubst %.h,%.compiled_h,$(H_FILES))\nC_FILES = $(wildcard *.c)\n\n\n.PHONY: test.output\ntest.output: test makefile\n\t@./$<\n\ntest: makefile $(C_FILES) $(COMPILED_H_FILES)\n\t@gcc $(CFLAGS) $(C_FILES) -o $@\n\n# This rule ensures header files build in their own right.\n# The quality of header files is important because header files\n# are #included from other files and thus have a large span\n# of influence (unlike .c files which are not #included).\n\n%.compiled_h: %.h\n\t@gcc -x c $(CFLAGS) -c -o $@ $<\n","cyber-dojo.sh":"make --always-make\n","output":"","instructions":"Suppose you're on a game show and you're given the\nchoice of three doors. Behind one door is a car; behind\nthe others, goats. The car and the goats were\nplaced randomly behind the doors before the show.\n\nThe rules of the game show are as follows:\n\nAfter you have chosen a door, the door remains closed\nfor the time being. The game show host, Monty Hall, who\nknows what is behind the doors, now has to open one of\nthe two remaining doors, and the door he opens must have\na goat behind it. If both remaining doors have goats\nbehind them, he chooses one randomly. After Monty Hall\nopens a door with a goat, he will ask you to decide\nwhether you want to stay with your first choice or to\nswitch to the last remaining door.\n\nFor example:\nImagine that you chose Door 1 and the host opens Door 3,\nwhich has a goat. He then asks you \"Do you want to switch\nto Door Number 2?\" Is it to your advantage to change your\nchoice?\n\nNote that the player may initially choose any of the\nthree doors (not just Door 1), that the host opens a\ndifferent door revealing a goat (not necessarily Door 3),\nand that he gives the player a second choice between the\ntwo remaining unopened doors.\n\nSimulate at least a thousand games using three doors for\neach strategy and show the results in such a way as to make\nit easy to compare the effects of each strategy.\n\n[Source http://rosettacode.org]"},"exercise":"Monty_Hall"}